['java', 'eclipse', 'maven', 'maven-publish', 'application'].each {
    apply plugin : it
}

mainClassName = 'examples.multi.TestTimelinePlotting'

sourceCompatibility = 1.6
targetCompatibility = 1.6

version = '1.0.141'
group = 'meta-csp-framework'

repositories {
  maven {
    url 'http://robotbrains.hideho.org/nexus/content/groups/ros-public'
  }
}

dependencies {
  compile fileTree(dir: 'lib', include: '**/*.jar')
  compile 'org.ow2.sat4j:org.ow2.sat4j.sat:2.3.4'
  compile 'net.sf.jung:jung2:2.0.1'
  compile 'net.sf.jung:jung-graph-impl:2.0.1'
  compile 'net.sf.jung:jung-algorithms:2.0.1'
  compile 'net.sf.jung:jung-visualization:2.0.1'
  compile 'org.prefuse:prefuse:beta-20071021'
  compile 'jfree:jfreechart:1.0.13'
  compile 'junit:junit:4.8.1'
}

processResources { 
     from(projectDir) { 
         include 'license.txt'
     } 
} 

//create javaDoc jar
task javadocJar (type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    from(projectDir) {
       include 'license.txt'
    }
}

//create sources jar
task sourceJar (type : Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
    from(projectDir) {
       include 'license.txt'
    }
}

//create extra lib jar
task libJar (type : Jar) {
    def lib = file("lib")
    classifier = 'libs'
    from lib
}

publishing {
    publications {
        metaCSPFramework(MavenPublication) {
            from components.java
 	    artifact (javadocJar) {
                classifier = 'javadoc'
            }
	    artifact (sourceJar) {
                classifier = 'sources'
            }
	    artifact (libJar) {
                classifier = 'libs'
            }
        }
    }
    repositories {
        maven {
            url "file:/${project.projectDir}/artifacts"
        }
    }
}

defaultTasks 'install'
